import pytest
from unittest.mock import MagicMock
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from start_command import StartCommand


def test_start_command():
    start_command = StartCommand()
    update = MagicMock(spec=Update)
    context = MagicMock(spec=CallbackContext)
    context.user_data = {}

    start_command.execute(update, context)

    assert context.user_data['processing_order'] == False
    context.bot.send_message.assert_called_once_with(
        chat_id=update.effective_chat.id,
        text=(
            '–í—ñ—Ç–∞—é —É <b>ADP Pizza</b>! üçï –¶–µ –≤–∞—à –æ—Å–æ–±–∏—Å—Ç–∏–π –ø–æ–º—ñ—á–Ω–∏–∫, –∑–∞–≤–¥—è–∫–∏ —è–∫–æ–º—É –≤–∏ –∑–º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–π–æ–º–∏—Ç–∏—Å—è –∑ –Ω–∞—à–∏–º –º–µ–Ω—é, '
            '–∑–∞–º–æ–≤–∏—Ç–∏ –ø—ñ—Ü—É —Ç–∞ –æ—Ç—Ä–∏–º–∞—Ç–∏ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ –∞–∫—Ü—ñ—ó.\n\n–°–ø–æ–¥—ñ–≤–∞—î–º–æ—Å—å, –≤–∏ –∑–Ω–∞–π–¥–µ—Ç–µ —É–ª—é–±–ª–µ–Ω—ñ —Å–º–∞–∫–∏ —Ç–∞ –Ω–∞—Å–æ–ª–æ–¥–∂—É–≤–∞—Ç–∏–º–µ—Ç–µ—Å—å –∫–æ–∂–Ω–∏–º —à–º–∞—Ç–æ—á–∫–æ–º! C–º–∞—á–Ω–æ–≥–æ! üçï'
        ),
        parse_mode='HTML',
        reply_markup=InlineKeyboardMarkup([
            [InlineKeyboardButton("üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é", callback_data="menu")],
            [InlineKeyboardButton("üß∫ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–æ—à–∏–∫—É", callback_data="open_cart")]
        ])
    )


if __name__ == "__main__":
    pytest.main()
