from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup, KeyboardButton, ReplyKeyboardMarkup, \
    ReplyKeyboardRemove
from telegram.ext import CallbackContext
from prettytable import PrettyTable
from start_command import StartCommand
from command_base import CommandBase
from db_manager import APIClient
import logging


class StartOrderCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —ñ–Ω—ñ—Ü—ñ–∞—Ü—ñ—ó –ø—Ä–æ—Ü–µ—Å—É –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—è—î –Ω–∞—è–≤–Ω—ñ—Å—Ç—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –≤ —Å–∏—Å—Ç–µ–º—ñ —Ç–∞ —ñ–Ω—ñ—Ü—ñ—é—î –ø—Ä–æ—Ü–µ—Å –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –∞–±–æ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—é –Ω–æ–≤–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def set_factory(self, factory):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ —É –ø—Ä–æ—Ü–µ—Å—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        """
        self.factory = factory

    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –∑ —ñ–Ω—ñ—Ü—ñ–∞—Ü—ñ—ó –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            context.user_data['processing_order'] = True
            user_id = update.effective_user.id
            user = APIClient.get_user(user_id)
            if user:
                self.factory.get_command("request_order_confirmation").execute(update, context)
            else:
                username = update.effective_user.username
                firstname = update.effective_user.first_name
                lastname = update.effective_user.last_name
                APIClient.add_user(user_id, username, firstname, lastname)
                self.factory.get_command("request_phone_number").execute(update, context)
        except Exception as e:
            logging.error(f"Start Order Command execute error: {e}", exc_info=True)


class ConfirmOrderCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –ø—ñ—Å–ª—è –∑–±–æ—Ä—É –≤—Å—ñ—Ö –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö –¥–∞–Ω–∏—Ö.
    """

    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –ø—Ä–æ —É—Å–ø—ñ—à–Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–Ω—è.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            if context.user_data['processing_order']:
                context.user_data['processing_order'] = False
                user_id = update.effective_user.id
                cart_items = APIClient.get_cart(user_id)
                order_list = [(item[0], item[1], item[2]) for item in cart_items]
                total_price = sum(item[2] for item in cart_items)
                user_info = APIClient.get_user(user_id)
                phone_number = user_info[4]
                location = user_info[5]
                order_id = APIClient.create_order(user_id, phone_number, order_list, total_price, location)
                APIClient.clear_cart(user_id)
                context.bot.send_message(chat_id=update.effective_chat.id,
                                         text=f"‚úÖ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è #{order_id['order_id']} –æ—Ñ–æ—Ä–º–ª–µ–Ω–æ. –û—á—ñ–∫—É–π—Ç–µ –Ω–∞ –¥–∑–≤—ñ–Ω–æ–∫ –∫—É—Ä'—î—Ä–∞ ‚ù£Ô∏è")
            else:
                StartCommand().execute(update, context)
        except Exception as e:
            logging.error(f"Confirm Order Command execute error: {e}", exc_info=True)


class CancelOrderCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –≤—ñ–¥–º—ñ–Ω–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞ –±—É–¥—å-—è–∫–æ–º—É –µ—Ç–∞–ø—ñ –æ–±—Ä–æ–±–∫–∏.
    """

    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –≤—ñ–¥–º—ñ–Ω–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —Ç–∞ —Å–ø–æ–≤—ñ—â–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –ø—Ä–æ —Ü–µ.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            if context.user_data['processing_order']:
                context.user_data['processing_order'] = False
                menu_button = InlineKeyboardButton("üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é", callback_data="menu")
                cart_button = InlineKeyboardButton("üß∫ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–æ—à–∏–∫—É", callback_data="open_cart")
                context.bot.send_message(chat_id=update.effective_chat.id, text="–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤—ñ–¥—Ö–∏–ª–µ–Ω–æ ‚ùå",
                                         reply_markup=InlineKeyboardMarkup([[menu_button], [cart_button]]))
            else:
                StartCommand().execute(update, context)
        except Exception as e:
            logging.error(f"Cancel Order Command execute error: {e}", exc_info=True)


class RequestOrderConfirmationCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—Ä–æ—Å—É –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –ø–æ–∫–∞–∑—É—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥–µ—Ç–∞–ª—ñ –π–æ–≥–æ –ø–æ—Ç–æ—á–Ω–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è.
    """

    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –∑–∞–ø–∏—Ç—É –Ω–∞ –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è, –≤—ñ–¥–æ–±—Ä–∞–∂–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –¥–µ—Ç–∞–ª—ñ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            if context.user_data['processing_order']:
                user_id = update.effective_user.id
                cart_items = APIClient.get_cart(user_id)
                total = sum(item[2] for item in cart_items)
                output = PrettyTable()
                output.field_names = ["–ù–∞–∑–≤–∞", "N", "–°—É–º–∞"]
                output.add_rows(cart_items)
                user_data = APIClient.get_user(user_id)
                location = user_data[5].split("|") if user_data and user_data[5] else (0, 0)
                latitude, longitude = map(float, location)
                order_button = InlineKeyboardButton("‚úÖ –ü—ñ–¥—Ç–≤–µ—Ä–¥–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="confirm_order")
                clean_button = InlineKeyboardButton("‚ùå –í—ñ–¥—Ö–∏–ª–∏—Ç–∏ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="cancel_order")
                menu_button = InlineKeyboardButton("üó∫Ô∏è –ó–º—ñ–Ω–∏—Ç–∏ –∞–¥—Ä–µ—Å—É", callback_data="request_location")
                keyboard = InlineKeyboardMarkup([[order_button], [clean_button], [menu_button]])
                context.bot.send_message(chat_id=update.effective_chat.id,
                                         text=f'üìÑ –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è:\n<code>{output}</code>\n\nüíµ <b>–î–æ —Å–ø–ª–∞—Ç–∏:</b> {total}\n\nüì± –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É: {user_data[4]}\nüó∫Ô∏è –ê–¥—Ä–µ—Å–∞ –¥–æ—Å—Ç–∞–≤–∫–∏:',
                                         parse_mode='HTML')
                context.bot.send_location(chat_id=update.effective_chat.id, latitude=latitude, longitude=longitude,
                                          reply_markup=keyboard)
            else:
                StartCommand().execute(update, context)
        except Exception as e:
            logging.error(f"Request Order Confirmation Command execute error: {e}", exc_info=True)


class RequestPhoneNumberCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä—É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def execute(self, update: Update, context: CallbackContext):
        """
        –ù–∞–¥—Å–∏–ª–∞—î –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É –∑–∞–ø–∏—Ç –Ω–∞ –Ω–∞–¥–∞–Ω–Ω—è —Å–≤–æ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–Ω–æ–≥–æ –Ω–æ–º–µ—Ä—É —á–µ—Ä–µ–∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            contact_keyboard = KeyboardButton('üì± –ü–æ–¥—ñ–ª–∏—Ç–∏—Å—è –Ω–æ–º–µ—Ä–æ–º —Ç–µ–ª–µ—Ñ–æ–Ω—É', request_contact=True)
            contact_markup = ReplyKeyboardMarkup([[contact_keyboard]], one_time_keyboard=True)
            context.bot.send_message(chat_id=update.effective_chat.id, text='–ë—É–¥—å –ª–∞—Å–∫–∞, –Ω–∞–¥–∞–π—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É üì±',
                                     reply_markup=contact_markup)
        except Exception as e:
            logging.error(f"Request Phone Number Command execute error: {e}", exc_info=True)


class RequestLocationCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø–∏—Ç—É –∞–¥—Ä–µ—Å–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ —É –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–º–∞–≥–∞—î –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞ –Ω–∞–¥–∞–Ω–Ω—è —Å–≤–æ—î—ó –∞–¥—Ä–µ—Å–∏ —á–µ—Ä–µ–∑ —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å Telegram.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            context.bot.send_message(chat_id=update.effective_chat.id,
                                     text='–ë—É–¥—å –ª–∞—Å–∫–∞, –≤–∫–∞–∂—ñ—Ç—å –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ üó∫Ô∏è\n\nTelegram -> Attach -> Location')
        except Exception as e:
            logging.error(f"Request Location Command execute error: {e}", exc_info=True)


class GotPhoneNumberCommand(CommandBase):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def set_factory(self, factory):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ —É –ø—Ä–æ—Ü–µ—Å—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        """
        self.factory = factory

    def execute(self, update: Update, context: CallbackContext):
        """
        –ó–±–µ—Ä—ñ–≥–∞—î –æ—Ç—Ä–∏–º–∞–Ω–∏–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É —ñ –∑–∞–ø—É—Å–∫–∞—î –Ω–∞—Å—Ç—É–ø–Ω—É –∫–æ–º–∞–Ω–¥—É, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            if context.user_data['processing_order']:
                user_id = update.effective_user.id
                phone_number = update.message.contact.phone_number
                APIClient.update_user_contact(user_id, phone_number=phone_number)
                context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ –ù–æ–º–µ—Ä –∑–±–µ—Ä–µ–∂–µ–Ω–æ",
                                         reply_markup=ReplyKeyboardRemove())
                user_data = self.factory.get_command("request_location").execute(update, context)
            else:
                StartCommand().execute(update, context)
        except Exception as e:
            logging.error(f"Got Phone Number Command execute error: {e}", exc_info=True)


class GotLocationCommand(CommandBase):
    """
    –û–±—Ä–æ–±–Ω–∏–∫ –ø–æ–¥—ñ—ó –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –∞–¥—Ä–µ—Å–∏ –¥–æ—Å—Ç–∞–≤–∫–∏ –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    def set_factory(self, factory):
        """
        –í—Å—Ç–∞–Ω–æ–≤–ª—é—î –∫–æ–Ω—Ç–µ–∫—Å—Ç –¥–ª—è –∫–æ–º–∞–Ω–¥–∏. –ù–µ–æ–±—Ö—ñ–¥–Ω–æ –¥–ª—è –≤–∏–∫–ª–∏–∫—É —ñ–Ω—à–æ—ó –∫–æ–º–∞–Ω–¥–∏ —É –ø—Ä–æ—Ü–µ—Å—ñ –≤–∏–∫–æ–Ω–∞–Ω–Ω—è
        """
        self.factory = factory

    def execute(self, update: Update, context: CallbackContext):
        """
        –ó–±–µ—Ä—ñ–≥–∞—î –æ—Ç—Ä–∏–º–∞–Ω—É –∞–¥—Ä–µ—Å—É –¥–æ—Å—Ç–∞–≤–∫–∏ —ñ –∑–∞–ø—É—Å–∫–∞—î –Ω–∞—Å—Ç—É–ø–Ω—É –∫–æ–º–∞–Ω–¥—É –¥–ª—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            if context.user_data['processing_order']:
                user_id = update.effective_user.id
                location = f"{update.message.location.latitude}|{update.message.location.longitude}"
                APIClient.update_user_contact(user_id, location=location)
                context.bot.send_message(chat_id=update.effective_chat.id, text="‚úÖ –ê–¥—Ä–µ—Å—É –∑–±–µ—Ä–µ–∂–µ–Ω–æ")
                self.factory.get_command("request_order_confirmation").execute(update, context)
            else:
                StartCommand().execute(update, context)
        except Exception as e:
            logging.error(f"Got Location Command execute error: {e}", exc_info=True)
