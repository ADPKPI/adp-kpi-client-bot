from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import CallbackContext
from prettytable import PrettyTable
from command_base import CommandBase
from db_manager import APIClient
import logging

class AddToCartCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—à–∏–∫ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    def execute(self, product_id, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Ç–æ–≤–∞—Ä—É –≤ –∫–æ—à–∏–∫.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            product_id (int): ID —Ç–æ–≤–∞—Ä—É –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è.
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            context.user_data['processing_order'] = False
            user_id = update.effective_user.id
            menu_row = APIClient.get_pizza_details_by_id(product_id)

            if menu_row:
                APIClient.add_to_cart(user_id, product_id)
                cart_button = [[InlineKeyboardButton("üß∫ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∫–æ—à–∏–∫—É", callback_data="open_cart")]]
                reply_markup = InlineKeyboardMarkup(cart_button)
                context.bot.send_message(chat_id=update.effective_chat.id, text="–¢–æ–≤–∞—Ä –¥–æ–¥–∞–Ω–æ –≤ –∫–æ—à–∏–∫ üß∫",
                                         reply_markup=reply_markup)
            else:
                context.bot.send_message(chat_id=update.effective_chat.id, text="–¢–æ–≤–∞—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ üò∂‚Äçüå´Ô∏è")
        except Exception as e:
            logging.error(f"Add To Cart Command execute error: {e}", exc_info=True)

class OpenCartCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –∫–æ—à–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –∫–æ—à–∏–∫–∞, –ø–æ–∫–∞–∑—É—é—á–∏ –≤–º—ñ—Å—Ç –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            context.user_data['processing_order'] = False
            user_id = update.effective_user.id
            rows = APIClient.get_cart(user_id)
            output = PrettyTable()
            output.field_names = ["–ù–∞–∑–≤–∞", "N", "–°—É–º–∞"]
            order_button = InlineKeyboardButton("üìÑ –ü–µ—Ä–µ–π—Ç–∏ –¥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è", callback_data="start_order")
            clean_button = InlineKeyboardButton("‚ùå –û—á–∏—Å—Ç–∏—Ç–∏ –∫–æ—à–∏–∫", callback_data="clean_cart")
            menu_button = InlineKeyboardButton("üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é", callback_data="menu")
            keyboard = [[order_button], [clean_button], [menu_button]]

            if rows:
                output.add_rows(rows)
                total = sum(row[2] for row in rows)
                context.bot.send_message(chat_id=update.effective_chat.id,
                                         text=f"<code>{output}</code>\n\nüíµ <b>–î–æ —Å–ø–ª–∞—Ç–∏:</b> {total} –≥—Ä–Ω",
                                         parse_mode='HTML',
                                         reply_markup=InlineKeyboardMarkup(keyboard))
            else:
                context.bot.send_message(chat_id=update.effective_chat.id, text='–ù–∞—Ä–∞–∑—ñ –∫–æ—à–∏–∫ –ø—É—Å—Ç–∏–π üòî',
                                         reply_markup=InlineKeyboardMarkup([[menu_button]]))
        except Exception as e:
            logging.error(f"Open Cart Command execute error: {e}", exc_info=True)

class CleanCartCommand(CommandBase):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –æ—á–∏—â–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """
    def execute(self, update: Update, context: CallbackContext):
        """
        –í–∏–∫–æ–Ω—É—î –∫–æ–º–∞–Ω–¥—É –æ—á–∏—â–µ–Ω–Ω—è –∫–æ—à–∏–∫–∞.

        –ü–∞—Ä–∞–º–µ—Ç—Ä–∏:
            update (Update): –û–±'—î–∫—Ç Update –≤—ñ–¥ Telegram API.
            context (CallbackContext): –ö–æ–Ω—Ç–µ–∫—Å—Ç –≤–∏–∫–æ–Ω–∞–Ω–Ω—è –∫–æ–º–∞–Ω–¥–∏.
        """
        try:
            context.user_data['processing_order'] = False
            user_id = update.effective_user.id
            APIClient.clear_cart(user_id)
            menu_button = InlineKeyboardButton("üìã –ü–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –º–µ–Ω—é", callback_data="menu")
            context.bot.send_message(chat_id=update.effective_chat.id, text="–ö–æ—à–∏–∫ –æ—á–∏—â–µ–Ω–æ üòî",
                                     reply_markup=InlineKeyboardMarkup([[menu_button]]))
        except Exception as e:
            logging.error(f"Clean Cart Command execute error: {e}", exc_info=True)
